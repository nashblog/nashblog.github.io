{"version":3,"sources":["redux/reducers/nav.js","redux/reducers/blog.js","redux/actionType/blog.js","redux/createStore.js","store.js","serviceWorker.js","components/Nav/NavItem.jsx","containers/Nav/Links.jsx","components/Nav/Brand.jsx","containers/Nav/NavBar.jsx","components/HomePage/HomePage.jsx","containers/BlogFather/ListItem.jsx","redux/actions/blog.js","containers/utils/Spinner.jsx","components/BlogFather/List.jsx","components/BlogFather/BlogFather.jsx","containers/Blog/Pagination.jsx","containers/Blog/BlogView.jsx","components/Blog/Blog.jsx","containers/Footer/NavigationFooter.jsx","components/Footer/Footer.jsx","routes/index.jsx","index.js"],"names":["initialState","to","exact","name","nav","state","arguments","length","undefined","type","blog","action","Object","objectSpread","isLoading","assign","data","payload","hasError","createStore","history","combineReducers","router","connectRouter","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","Boolean","window","location","hostname","match","NavigationLink","_ref","other","objectWithoutProperties","react_default","a","createElement","NavItem","NavLink","className","activeClassName","children","Links","isOpen","links","Collapse","navbar","map","val","i","key","Brand","toggle","NavbarBrand","style","color","NavbarToggler","onClick","NavigationBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","Container","Navbar","light","expand","Component","withRouter","connect","ownProps","HomePage","ListItem","id","likes","Link","Badge","pill","isBlogFetching","bool","fetchBlog","short","dispatch","url","fetch","then","response","ok","Error","statusText","res","json","items","catch","err","CustomSpinner","Spinner","List","prevProps","Array","isArray","stories","Spinner_CustomSpinner","ListGroup","containers_BlogFather_ListItem","parseInt","defaultProps","BlogFather","BlogFather_List","Pagination","_this$props","current","count","Row","Col","sm","size","offset","Pagination_First","Pagination_Previous","disabled","number","Pagination_Number","active","Pagination_Next","Pagination_Last","First","aria-label","aria-hidden","Previous","Number","_ref2","Next","_ref3","Last","_ref4","BlogView","react_markdown_default","source","Blog","params","Fragment","Pagination_Pagination","BlogView_BlogView","NavigationFooter","Footer","NavigationFooter_NavigationFooter","routes","Nav_NavBar","Switch","Route","path","component","Footer_Footer","store","createRootReducer","render","es","esm","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.129ae6b2.chunk.js","sourcesContent":["const initialState = [\r\n    { to: '/', exact: true, name: 'Главная' }, \r\n    { to: '/contest', exact: true, name: 'Конкурс' }, \r\n    { to: '/works', name: 'Мои работы' }, \r\n    { to: '/discussions', name: 'Обсуждение' }, \r\n    { to: '/exam', name: 'ЕГЭ и ОГЭ' }, \r\n    { to: '/blog', name: 'Блог' }\r\n]\r\n\r\n\r\nexport const nav = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ACTION_TYPE':\r\n            return \r\n        default:\r\n            return state\r\n    }\r\n}","import { BLOG_FETCH, BLOG_FETCH_FAILED, BLOG_FETCH_SUCCESS } from \"../actionType/blog\";\r\n\r\nconst initialState = [\r\n    // {\r\n    //     name: 'Улыбка',\r\n    //     id: 1,\r\n    //     likes: 12312312\r\n    // }, {\r\n    //     name: 'Улыбка',\r\n    //     id: 2,\r\n    //     likes: 6\r\n    // }, {\r\n    //     name: 'Улыбка',\r\n    //     id: 3,\r\n    //     likes: 9\r\n    // }, {\r\n    //     name: 'Улыбка',\r\n    //     id: 4,\r\n    //     likes: 154\r\n    // }, {\r\n    //     name: 'Улыбка',\r\n    //     id: 5,\r\n    //     likes: 8921\r\n    // }, {\r\n    //     name: 'Улыбка',\r\n    //     id: ''\r\n    // }, {\r\n    //     name: 'Улыбка',\r\n    //     id: 7\r\n    // },\r\n]\r\n\r\n\r\nexport const blog = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case BLOG_FETCH:\r\n            return {...state, isLoading: action.isLoading }\r\n        case BLOG_FETCH_SUCCESS:\r\n            return Object.assign({}, {isLoading:false, data: action.payload, hasError: false})\r\n        case BLOG_FETCH_FAILED:\r\n            return Object.assign({}, { isLoading: false, hasError: true })\r\n        default:\r\n            return state\r\n    }\r\n}","export const BLOG_FETCH = 'BLOG_FETCH'\r\nexport const BLOG_FETCH_SUCCESS = 'BLOG_FETCH_SUCCESS'\r\nexport const BLOG_FETCH_FAILED = 'BLOG_FETCH_FAILED'","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport { nav } from './reducers/nav'\r\nimport { blog } from './reducers/blog'\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    nav,\r\n    blog\r\n})","import {createStore, applyMiddleware, compose} from 'redux'\r\nimport {routerMiddleware} from 'connected-react-router'\r\nimport thunk from 'redux-thunk'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport createRootReducer  from './redux/createStore'\r\n\r\nexport const history = createHistory()\r\n\r\nconst initialState = {}\r\nconst enhancers = []\r\nconst middleware = [thunk, routerMiddleware(history)]\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\r\n\r\n    if (typeof devToolsExtension === 'function') {\r\n        enhancers.push(devToolsExtension())\r\n    }\r\n}\r\n\r\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers)\r\n\r\nexport default function configureStore() {\r\n    const store = createStore(createRootReducer(history), initialState, composedEnhancers)\r\n    return store\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport { NavItem } from 'reactstrap'\r\nimport { NavLink  } from 'react-router-dom' \r\nimport './NavItem.css'\r\n\r\nexport function NavigationLink({ to, exact, name, ...other }) {\r\n    return <NavItem >\r\n            <NavLink\r\n            to={to}\r\n            className=\"nav-link link\"// font_2\"\r\n            activeClassName='activee'\r\n            exact={exact}\r\n            {...other}>\r\n            \r\n            {other.children ? other.children : name}\r\n        </NavLink>\r\n        </NavItem>\r\n}","import React from 'react'\r\nimport { Collapse } from 'reactstrap' \r\nimport { NavigationLink } from '../../components/Nav/NavItem';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Links({isOpen, links}) {\r\n    return <Collapse isOpen={isOpen} navbar className='justify-content-center order-2'>\r\n        <ul className='navbar-nav' >\r\n            {links && links.map((val, i) => <NavigationLink exact={ val.exact ? val.exact : false } to={val.to} key={i}>{val.name}</NavigationLink>)}\r\n        </ul>\r\n    </Collapse>\r\n}\r\nLinks.propTypes={\r\n    isOpen: PropTypes.bool.isRequired,\r\n    links: PropTypes.arrayOf(PropTypes.shape({\r\n        exact:PropTypes.bool,\r\n        to:PropTypes.string.isRequired,\r\n        name:PropTypes.string.isRequired\r\n    }).isRequired)\r\n}","import React from 'react'\r\nimport { NavbarBrand, NavbarToggler } from 'reactstrap'\r\n\r\nexport default function Brand({toggle}) {\r\n    return <div className=\"d-flex  order-0\">\r\n        <NavbarBrand style={{ color:'#F25A29'}}>Н.А.Ш.</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n    </div>\r\n}","import React, { Component } from 'react'\r\nimport { Navbar, Container} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom' \r\nimport Links from './Links';\r\nimport Brand from '../../components/Nav/Brand';\r\nimport './NavBar.css'\r\n\r\nclass NavigationBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isOpen: false\r\n        }\r\n    }\r\n    toggle = () => {\r\n        this.setState({isOpen: !this.state.isOpen})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='bg-navbar'>\r\n                <Container >\r\n                    <Navbar light expand=\"md\" className=''> \r\n                        <Brand toggle={this.toggle}/>\r\n                        <Links links={this.props.links&& this.props.links} isOpen={this.state.isOpen}/>               \r\n                    </Navbar>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    links: state.nav\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps)(NavigationBar))","import React, { Component } from 'react'\r\n\r\nexport default class HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\">\r\n                <p>Днём <strong>14.03.19</strong>{' '} содержимое преобразится и наполнится данными </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Badge } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './ListItem.css'\r\n\r\nconst ListItem = ({ name, id, likes }) => (\r\n    <Link className={id ? \"list-group-item list-item\" :'disabled list-group-item list-item'} to={id ? `/blog/${id}` : '/blog/'}>\r\n            {name}\r\n            {' '}\r\n            {likes && <Badge pill >{likes}</Badge>}\r\n        </Link>\r\n)\r\n\r\nListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    likes: PropTypes.number,\r\n}\r\nexport default ListItem\r\n","import { BLOG_FETCH, BLOG_FETCH_SUCCESS, BLOG_FETCH_FAILED } from \"../actionType/blog\";\r\n\r\nexport const isBlogFetching = (bool) => ({\r\n    type: BLOG_FETCH,\r\n    isLoading: bool\r\n})\r\n\r\nexport const fetchBlogSuccess = (payload) => ({\r\n    type: BLOG_FETCH_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const fetchHasErrored = (bool) => ({\r\n    type: BLOG_FETCH_FAILED,\r\n    hasError: bool\r\n})\r\n\r\nexport const fetchBlog = (short, id) => {\r\n    return (dispatch) => {\r\n        dispatch(isBlogFetching(true))\r\n        \r\n        const url = short ? `https://5c86616fcc034a0014bd2569.mockapi.io/api/v1/blogss?l=10&p=1` : `https://5c86616fcc034a0014bd2569.mockapi.io/api/v1/blogss/${id}` \r\n\r\n        fetch(url)\r\n            .then((response)=> {\r\n                if(!response.ok){\r\n                    throw Error(response.statusText)\r\n                }\r\n\r\n                dispatch(isBlogFetching(false))\r\n                return response\r\n            })\r\n            .then((res)   => res.json())\r\n            .then((items) => dispatch(fetchBlogSuccess(items)))\r\n            .catch((err) => dispatch(fetchHasErrored(true)))\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nexport default class CustomSpinner extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"text-center mt-5\">\r\n                <Spinner {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { ListGroup } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\n\r\nimport ListItem from '../../containers/BlogFather/ListItem';\r\nimport { fetchBlog } from '../../redux/actions/blog';\r\nimport CustomSpinner from '../../containers/utils/Spinner';\r\n\r\nclass List extends Component {\r\n    componentDidMount(){\r\n        this.props.fetchBlog(true)\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (!Array.isArray(prevProps.stories.items)) \r\n            this.props.fetchBlog(true)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.hasError) {\r\n            return <p> OOoooops... We have some troubles</p>\r\n        }\r\n\r\n        if (this.props.isLoading ) {\r\n            return <CustomSpinner />\r\n        }\r\n\r\n        const {stories} = this.props\r\n        \r\n        return (\r\n            <ListGroup className=\"mb-3\">\r\n                {stories.items && Array.isArray(stories.items) && stories.items.map((val, i) => <ListItem key={i} id={parseInt(val.id)} name={val.name} likes={val.likes}/>)}\r\n            </ListGroup>\r\n        )\r\n    }\r\n}\r\n\r\nList.defaultProps = {\r\n    stories: []\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    isLoading: state.blog.isLoading,\r\n    hasError: state.blog.hasError,\r\n    stories: state.blog.data\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchBlog: (short, id) => dispatch(fetchBlog(short, id))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List)   ","import React, { Component } from 'react'\r\nimport {Container} from 'reactstrap'\r\nimport List from './List';\r\n\r\nexport default class BlogFather extends Component {\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-5\">\r\n                <h4 className=\"text-center\" style={{ color: '#4E706F'}}>В своём блоге я обычно делюсь смешными моментами с уроков.\r\n                    Предлагаю с некоторымы из них познакомиться, выбирайте.</h4>\r\n                <Container>\r\n                    <List/>\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap'\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default class Pagination extends Component {\r\n    render() {\r\n        const { current, count } = this.props \r\n        \r\n        if ((parseInt(current) <= parseInt(count)) && (parseInt(current) > 0)) {\r\n            return             <Container>\r\n                <Row className=\"text-center mt-5\">\r\n                    <Col sm={{ size: 3, offset: 4 }}>\r\n                        <nav>\r\n                            <ul className=\"pagination pagination justify-content-center\">\r\n                                {current > 2 ? <First /> : null}\r\n                                <Previous disabled={current < 2 ? true : false} number={current} />\r\n                                {\r\n                                    current > 3 ? <Number active={false} number={current - 1} /> : null\r\n                                }\r\n                                <Number active={true} number={current} />\r\n                                {\r\n                                    current < (count - 2) ? <Number active={false} number={parseInt(current) + 1} /> : null\r\n                                }\r\n                                <Next disabled={current < count ? false : true} number={current} />\r\n                                {current < (count - 1) ? <Last count={count} /> : null}\r\n                            </ul>\r\n                        </nav>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        }else {\r\n            return null\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst First = () => (\r\n    <li className=\"page-item\">\r\n        <Link to=\"/blog/1\" className=\"page-link\" aria-label=\"First\">\r\n            <span aria-hidden=\"true\">«</span>\r\n            <span className=\"sr-only\">First</span>\r\n        </Link>\r\n    </li>\r\n)\r\n\r\nconst Previous = ({disabled, number}) => (\r\n    <li className={disabled ? \"page-item disabled\" : \"page-item\"}>\r\n        <Link to={disabled ? \"#\" : `/blog/${number-1}`} className=\"page-link\" aria-label=\"Previous\">\r\n            <span aria-hidden=\"true\">‹</span>\r\n            <span className=\"sr-only\">Previous</span>\r\n        </Link>\r\n    </li>\r\n)\r\n\r\nconst Number = ({number, active}) => (\r\n    <li className={active ? \"page-item active\" : \"page-item\"}>\r\n        <Link to={\"/blog/\"+ number} className=\"page-link\" aria-label={number}>\r\n            <span aria-hidden=\"true\">{number}</span>\r\n            <span className=\"sr-only\">{number}</span>\r\n        </Link>\r\n    </li>\r\n)\r\n\r\nconst Next = ({ disabled, number }) => (\r\n    <li className={disabled ? \"page-item disabled\" : \"page-item\"}>\r\n        <Link to={disabled ? \"#\" : `/blog/${parseInt(number) + 1}`} className=\"page-link\" aria-label=\"Next\">\r\n            <span aria-hidden=\"true\">›</span>\r\n            <span className=\"sr-only\">Next</span>\r\n        </Link>\r\n    </li>\r\n)\r\n\r\nconst Last = ({count}) => (\r\n    <li className=\"page-item\">\r\n        <Link to={`/blog/${count}`} className=\"page-link\" aria-label=\"Last\">\r\n            <span aria-hidden=\"true\">»</span>\r\n            <span className=\"sr-only\">Last</span>\r\n        </Link>\r\n    </li>\r\n)\r\n\r\n\r\nPagination.defaultProps = {\r\n    current: 1  \r\n}\r\n\r\n/*\r\n<Pagination size=\"sm\" aria-label=\"Page navigation example\">\r\n                            <PaginationItem>\r\n                                <PaginationLink first href=\"#3\" />\r\n                            </PaginationItem>\r\n\r\n                            <PaginationItem>\r\n                                <PaginationLink previous href=\"#\" />\r\n                            </PaginationItem>\r\n\r\n                            <PaginationItem>\r\n                                <PaginationLink href=\"#\">\r\n                                    1\r\n                                </PaginationLink>\r\n                            </PaginationItem>\r\n\r\n                            <PaginationItem>\r\n                                <PaginationLink href=\"#\">\r\n                                    2\r\n                                </PaginationLink>\r\n                            </PaginationItem>\r\n\r\n                            <PaginationItem>\r\n                                <PaginationLink href=\"#\">\r\n                                    3\r\n                                </PaginationLink>\r\n                            </PaginationItem>\r\n\r\n                            <PaginationItem>\r\n                                <PaginationLink next href=\"#\" />\r\n                            </PaginationItem>\r\n\r\n                            <PaginationItem>\r\n                                <PaginationLink last href=\"#\" />\r\n                            </PaginationItem>\r\n                </Pagination>\r\n */","import React, { Component } from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport { Container } from 'reactstrap'\r\nimport '../utils/markdown.css'\r\n\r\n\r\nexport default class BlogView extends Component {\r\n    render() {\r\n        const { data } = this.props.data\r\n        return (\r\n            <Container>\r\n                <ReactMarkdown className=\"markdown-body\" source={data}/>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Pagination from '../../containers/Blog/Pagination';\r\nimport { fetchBlog } from '../../redux/actions/blog';\r\nimport BlogView from '../../containers/Blog/BlogView';\r\nimport CustomSpinner from '../../containers/utils/Spinner';\r\n\r\nclass Blog extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchBlog(false, this.props.match.params.id)\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.match.params.id !== prevProps.match.params.id){\r\n            this.props.fetchBlog(false, this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.hasError) {\r\n            return <p> OOoooops... We have some troubles</p>\r\n        }\r\n        \r\n        if (this.props.isLoading && this.props.data.length === 0) {\r\n            return <CustomSpinner />\r\n        }\r\n\r\n        const { params } = this.props.match\r\n\r\n        if (this.props.isLoading && this.props.data && this.props.data.count) {\r\n            return <React.Fragment>\r\n                <CustomSpinner/>\r\n                <Pagination current={params.id} count={this.props.data.count} />\r\n            </React.Fragment>\r\n        }\r\n        \r\n        return ( \r\n            <React.Fragment>\r\n                {this.props.data.items && <BlogView data={this.props.data.items}/>}\r\n                <Pagination current={params.id} count={this.props.data.count} />\r\n            </React.Fragment>)\r\n            \r\n    }\r\n}\r\n\r\nBlog.defaultProps ={\r\n    data: []\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    isLoading: state.blog.isLoading,\r\n    hasError: state.blog.hasError,\r\n    data: state.blog.data\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch)=>  ({\r\n    fetchBlog: (short, id) => dispatch(fetchBlog(short, id)) \r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Blog)","import React, { Component } from 'react'\r\nimport { Col, Container, Row } from 'reactstrap'\r\n\r\nimport './NavigationFooter.css'\r\n\r\nexport default class NavigationFooter extends Component {\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"4\" className=\"text-center\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col >\r\n                                <div className=\"navig-footer-header\">Навигация</div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport NavigationFooter from '../../containers/Footer/NavigationFooter';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page-footer\">\r\n                <Container>\r\n                    <NavigationFooter/>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport NavigationBar from '../containers/Nav/NavBar';\r\n// import FetchState from '../hoc/FetchData/FetchState.jsx';\r\nimport HomePage from '../components/HomePage/HomePage.jsx';\r\nimport BlogFather from '../components/BlogFather/BlogFather';\r\nimport Blog from '../components/Blog/Blog';\r\nimport Footer from '../components/Footer/Footer';\r\n// import Footer from '../containers/Footer/Footer';\r\n\r\nconst routes = (\r\n    <React.Fragment>\r\n        {/* <FetchState> */}\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"wrap\">\r\n                    <NavigationBar />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={HomePage} />\r\n                        <Route path='/blog' exact component={BlogFather}/>\r\n                        <Route path='/blog/:id' component={Blog}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        {/* </FetchState> */}\r\n    </React.Fragment>\r\n)\r\n\r\nexport default routes","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport configureStore, { history } from './store'\nimport * as serviceWorker from './serviceWorker';\nimport routes from './routes/index';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css'\n\nconst store = configureStore();\nrender(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            {routes}\n        </ConnectedRouter>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls. Learn\n// more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}